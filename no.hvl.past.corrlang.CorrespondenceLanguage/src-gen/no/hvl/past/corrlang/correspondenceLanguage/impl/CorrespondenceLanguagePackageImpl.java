/**
 * generated by Xtext 2.19.0
 */
package no.hvl.past.corrlang.correspondenceLanguage.impl;

import no.hvl.past.corrlang.correspondenceLanguage.Commonality;
import no.hvl.past.corrlang.correspondenceLanguage.Constraint;
import no.hvl.past.corrlang.correspondenceLanguage.CorrElement;
import no.hvl.past.corrlang.correspondenceLanguage.Correspondence;
import no.hvl.past.corrlang.correspondenceLanguage.CorrespondenceLanguageFactory;
import no.hvl.past.corrlang.correspondenceLanguage.CorrespondenceLanguagePackage;
import no.hvl.past.corrlang.correspondenceLanguage.Metamodel;
import no.hvl.past.corrlang.correspondenceLanguage.SubCommonality;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class CorrespondenceLanguagePackageImpl extends EPackageImpl implements CorrespondenceLanguagePackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass correspondenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass corrElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass metamodelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commonalityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass subCommonalityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass constraintEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see no.hvl.past.corrlang.correspondenceLanguage.CorrespondenceLanguagePackage#eNS_URI
   * @see #init()
   * @generated
   */
  private CorrespondenceLanguagePackageImpl()
  {
    super(eNS_URI, CorrespondenceLanguageFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link CorrespondenceLanguagePackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static CorrespondenceLanguagePackage init()
  {
    if (isInited) return (CorrespondenceLanguagePackage)EPackage.Registry.INSTANCE.getEPackage(CorrespondenceLanguagePackage.eNS_URI);

    // Obtain or create and register package
    Object registeredCorrespondenceLanguagePackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    CorrespondenceLanguagePackageImpl theCorrespondenceLanguagePackage = registeredCorrespondenceLanguagePackage instanceof CorrespondenceLanguagePackageImpl ? (CorrespondenceLanguagePackageImpl)registeredCorrespondenceLanguagePackage : new CorrespondenceLanguagePackageImpl();

    isInited = true;

    // Create package meta-data objects
    theCorrespondenceLanguagePackage.createPackageContents();

    // Initialize created meta-data
    theCorrespondenceLanguagePackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theCorrespondenceLanguagePackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(CorrespondenceLanguagePackage.eNS_URI, theCorrespondenceLanguagePackage);
    return theCorrespondenceLanguagePackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCorrespondence()
  {
    return correspondenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCorrespondence_ModelSpace()
  {
    return (EReference)correspondenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCorrespondence_Elements()
  {
    return (EReference)correspondenceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCorrElement()
  {
    return corrElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCorrElement_Name()
  {
    return (EAttribute)corrElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMetamodel()
  {
    return metamodelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMetamodel_ImportedNamespace()
  {
    return (EReference)metamodelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCommonality()
  {
    return commonalityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommonality_Elements()
  {
    return (EReference)commonalityEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommonality_SubComms()
  {
    return (EReference)commonalityEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSubCommonality()
  {
    return subCommonalityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSubCommonality_Elements()
  {
    return (EReference)subCommonalityEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSubCommonality_Name()
  {
    return (EAttribute)subCommonalityEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConstraint()
  {
    return constraintEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CorrespondenceLanguageFactory getCorrespondenceLanguageFactory()
  {
    return (CorrespondenceLanguageFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    correspondenceEClass = createEClass(CORRESPONDENCE);
    createEReference(correspondenceEClass, CORRESPONDENCE__MODEL_SPACE);
    createEReference(correspondenceEClass, CORRESPONDENCE__ELEMENTS);

    corrElementEClass = createEClass(CORR_ELEMENT);
    createEAttribute(corrElementEClass, CORR_ELEMENT__NAME);

    metamodelEClass = createEClass(METAMODEL);
    createEReference(metamodelEClass, METAMODEL__IMPORTED_NAMESPACE);

    commonalityEClass = createEClass(COMMONALITY);
    createEReference(commonalityEClass, COMMONALITY__ELEMENTS);
    createEReference(commonalityEClass, COMMONALITY__SUB_COMMS);

    subCommonalityEClass = createEClass(SUB_COMMONALITY);
    createEReference(subCommonalityEClass, SUB_COMMONALITY__ELEMENTS);
    createEAttribute(subCommonalityEClass, SUB_COMMONALITY__NAME);

    constraintEClass = createEClass(CONSTRAINT);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    commonalityEClass.getESuperTypes().add(this.getCorrElement());
    constraintEClass.getESuperTypes().add(this.getCorrElement());

    // Initialize classes and features; add operations and parameters
    initEClass(correspondenceEClass, Correspondence.class, "Correspondence", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCorrespondence_ModelSpace(), this.getMetamodel(), null, "modelSpace", null, 0, -1, Correspondence.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCorrespondence_Elements(), this.getCorrElement(), null, "elements", null, 0, -1, Correspondence.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(corrElementEClass, CorrElement.class, "CorrElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCorrElement_Name(), ecorePackage.getEString(), "name", null, 0, 1, CorrElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(metamodelEClass, Metamodel.class, "Metamodel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMetamodel_ImportedNamespace(), ecorePackage.getEPackage(), null, "importedNamespace", null, 0, 1, Metamodel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(commonalityEClass, Commonality.class, "Commonality", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCommonality_Elements(), ecorePackage.getEClassifier(), null, "elements", null, 0, -1, Commonality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCommonality_SubComms(), this.getSubCommonality(), null, "subComms", null, 0, -1, Commonality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(subCommonalityEClass, SubCommonality.class, "SubCommonality", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSubCommonality_Elements(), ecorePackage.getEStructuralFeature(), null, "elements", null, 0, -1, SubCommonality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSubCommonality_Name(), ecorePackage.getEString(), "name", null, 0, 1, SubCommonality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(constraintEClass, Constraint.class, "Constraint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    // Create resource
    createResource(eNS_URI);
  }

} //CorrespondenceLanguagePackageImpl
